[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8f456ebab12234f7",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "Query Prometheus for Current CPU Utliization (Load)",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://prometheus-server.default.svc.cluster.local/api/v1/query?query=sum(rate(node_cpu_seconds_total{mode!=%22idle%22}[2m]))*100",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 260,
        "y": 340,
        "wires": [
            [
                "59a44ca6124e67fc"
            ]
        ]
    },
    {
        "id": "68d73c089fecb368",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Update Load Object every 5 seconds",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "ac35b5c60ebb482e"
            ]
        ]
    },
    {
        "id": "ac35b5c60ebb482e",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "Query Prometheus for # of CPUs in cluster (Capacity)",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://prometheus-server.default.svc.cluster.local/api/v1/query?query=sum(machine_cpu_cores)*100",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 260,
        "y": 220,
        "wires": [
            [
                "3fb1d1b4ac1e2f06"
            ]
        ]
    },
    {
        "id": "59a44ca6124e67fc",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set Load and Timestamp Variables",
        "rules": [
            {
                "t": "set",
                "p": "load",
                "pt": "msg",
                "to": "payload.data.result[0].value[1]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "timestamp",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 380,
        "wires": [
            [
                "414224bedb4b72a6"
            ]
        ]
    },
    {
        "id": "3fb9773c00b9e504",
        "type": "change",
        "z": "f6f2187d.f17ca8",
        "name": "Set Capacity Variable",
        "rules": [
            {
                "t": "set",
                "p": "capacity",
                "pt": "msg",
                "to": "payload.data.result[0].value[1]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 300,
        "wires": [
            [
                "8f456ebab12234f7"
            ]
        ]
    },
    {
        "id": "3fb1d1b4ac1e2f06",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Determine Target by Capacity x desired target %",
        "func": "msg.target = Number(msg.payload.data.result[0].value[1]);  \nmsg.target = msg.target*.75; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 260,
        "wires": [
            [
                "3fb9773c00b9e504"
            ]
        ]
    },
    {
        "id": "23e7710e960f86b3",
        "type": "template",
        "z": "f6f2187d.f17ca8",
        "name": "Build XML LoadObject ",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<load-object domain=\"connected-cloud.io.akadns.net\"\n          version=\"1\"\n          xmlns=\"http://www.akamai.com/Traffic Management/load-balancing\"\n          timestamp=\"{{timestamp}}\"\n          tag=\"12345\" >\n      <datacenter datacenterId=\"2\">\n          <resource name=\"http_load\">\n              <current-load>\n                  {{load}}\n              </current-load>\n              <target-load>\n                  {{target}}\n              </target-load>\n              <capacity>\n                  {{capacity}}\n              </capacity>\n          </resource>\n       </datacenter>\n      </load-object>",
        "output": "str",
        "x": 160,
        "y": 460,
        "wires": [
            [
                "65cbf996ccb66aa2",
                "578fd9544a663a1a"
            ]
        ]
    },
    {
        "id": "414224bedb4b72a6",
        "type": "moment",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "topic": "",
        "input": "timestamp",
        "inputType": "msg",
        "inTz": "Africa/Abidjan",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "timestamp",
        "outputType": "msg",
        "outTz": "Africa/Abidjan",
        "x": 160,
        "y": 420,
        "wires": [
            [
                "23e7710e960f86b3"
            ]
        ]
    },
    {
        "id": "65cbf996ccb66aa2",
        "type": "file",
        "z": "f6f2187d.f17ca8",
        "name": "Write load object to disk ",
        "filename": "/data/loadobject",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 170,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "ba8b0809285c1e56",
        "type": "http in",
        "z": "f6f2187d.f17ca8",
        "name": "HTTP endpoint /loadobject ",
        "url": "/loadobject",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "1b0b901514eab1fd",
                "0d1c9a82e8b14f92"
            ]
        ]
    },
    {
        "id": "1b0b901514eab1fd",
        "type": "file in",
        "z": "f6f2187d.f17ca8",
        "name": "Read from loadobject file ",
        "filename": "/data/loadobject",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 170,
        "y": 620,
        "wires": [
            [
                "878335ddf5f5530a"
            ]
        ]
    },
    {
        "id": "878335ddf5f5530a",
        "type": "http response",
        "z": "f6f2187d.f17ca8",
        "name": "Serve loadobject ",
        "statusCode": "",
        "headers": {},
        "x": 150,
        "y": 660,
        "wires": []
    },
    {
        "id": "5470668fbe08ef7c",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "Instructions for per-env configuration-\\n  1. Within \"Determine Target by Capacity x desired target %\" node, enter the target percentage in the function (i.e. 75% target would mean multiplying capacity by 0.75) \\n 2. Within \"Build XML LoadObject\" node, change the domain, data center ID, and resource name values per the specific GTM configuration.",
        "info": "Instructions for per-env configuration-\n\n1. Within \"Determine Target by Capacity x desired target %\" node, enter the target percentage in the function (i.e. 75% target would mean multiplying capacity by 0.75)\n\n2. Within \"Build XML LoadObject\" node, change the domain, data center ID, and resource name values per the specific GTM configuration.",
        "x": 610,
        "y": 80,
        "wires": []
    },
    {
        "id": "578fd9544a663a1a",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 400,
        "wires": []
    },
    {
        "id": "0d1c9a82e8b14f92",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 560,
        "wires": []
    }
]
